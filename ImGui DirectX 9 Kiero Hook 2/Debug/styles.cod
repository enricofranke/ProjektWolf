; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	D:\Programmieren\csgoHack\ProjektWolf\ImGui DirectX 9 Kiero Hook 2\styles.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__ED9CC025_corecrt_memcpy_s@h DB 01H
__241EEA0C_corecrt_memory@h DB 01H
__875914C9_corecrt_wstring@h DB 01H
__731387C4_string@h DB 01H
__42049807_imgui@h DB 01H
__A6388185_styles@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?loadStyle@@YAXXZ				; loadStyle
PUBLIC	??0ImVec2@@QAE@MM@Z				; ImVec2::ImVec2
PUBLIC	??0ImVec4@@QAE@MMMM@Z				; ImVec4::ImVec4
PUBLIC	__JustMyCode_Default
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d75c28f
PUBLIC	__real@3d8f5c29
PUBLIC	__real@3db851ec
PUBLIC	__real@3dcccccd
PUBLIC	__real@3df5c28f
PUBLIC	__real@3e6b851f
PUBLIC	__real@3e75c28f
PUBLIC	__real@3e800000
PUBLIC	__real@3e947ae1
PUBLIC	__real@3e9eb852
PUBLIC	__real@3ec28f5c
PUBLIC	__real@3ec7ae14
PUBLIC	__real@3ecccccd
PUBLIC	__real@3edc28f6
PUBLIC	__real@3f0f5c29
PUBLIC	__real@3f147ae1
PUBLIC	__real@3f2147ae
PUBLIC	__real@3f3ae148
PUBLIC	__real@3f400000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f547ae1
PUBLIC	__real@3f6147ae
PUBLIC	__real@3f68f5c3
PUBLIC	__real@3f6b851f
PUBLIC	__real@3f733333
PUBLIC	__real@3f7ae148
PUBLIC	__real@3f800000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41000000
PUBLIC	__real@41100000
PUBLIC	__real@41400000
PUBLIC	__real@41700000
PUBLIC	__real@41c80000
EXTRN	?GetStyle@ImGui@@YAAAUImGuiStyle@@XZ:PROC	; ImGui::GetStyle
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7ae148
CONST	SEGMENT
__real@3f7ae148 DD 03f7ae148r			; 0.98
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f6b851f
CONST	SEGMENT
__real@3f6b851f DD 03f6b851fr			; 0.92
CONST	ENDS
;	COMDAT __real@3f68f5c3
CONST	SEGMENT
__real@3f68f5c3 DD 03f68f5c3r			; 0.91
CONST	ENDS
;	COMDAT __real@3f6147ae
CONST	SEGMENT
__real@3f6147ae DD 03f6147aer			; 0.88
CONST	ENDS
;	COMDAT __real@3f547ae1
CONST	SEGMENT
__real@3f547ae1 DD 03f547ae1r			; 0.83
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f3ae148
CONST	SEGMENT
__real@3f3ae148 DD 03f3ae148r			; 0.73
CONST	ENDS
;	COMDAT __real@3f2147ae
CONST	SEGMENT
__real@3f2147ae DD 03f2147aer			; 0.63
CONST	ENDS
;	COMDAT __real@3f147ae1
CONST	SEGMENT
__real@3f147ae1 DD 03f147ae1r			; 0.58
CONST	ENDS
;	COMDAT __real@3f0f5c29
CONST	SEGMENT
__real@3f0f5c29 DD 03f0f5c29r			; 0.56
CONST	ENDS
;	COMDAT __real@3edc28f6
CONST	SEGMENT
__real@3edc28f6 DD 03edc28f6r			; 0.43
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3ec7ae14
CONST	SEGMENT
__real@3ec7ae14 DD 03ec7ae14r			; 0.39
CONST	ENDS
;	COMDAT __real@3ec28f5c
CONST	SEGMENT
__real@3ec28f5c DD 03ec28f5cr			; 0.38
CONST	ENDS
;	COMDAT __real@3e9eb852
CONST	SEGMENT
__real@3e9eb852 DD 03e9eb852r			; 0.31
CONST	ENDS
;	COMDAT __real@3e947ae1
CONST	SEGMENT
__real@3e947ae1 DD 03e947ae1r			; 0.29
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e75c28f
CONST	SEGMENT
__real@3e75c28f DD 03e75c28fr			; 0.24
CONST	ENDS
;	COMDAT __real@3e6b851f
CONST	SEGMENT
__real@3e6b851f DD 03e6b851fr			; 0.23
CONST	ENDS
;	COMDAT __real@3df5c28f
CONST	SEGMENT
__real@3df5c28f DD 03df5c28fr			; 0.12
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3db851ec
CONST	SEGMENT
__real@3db851ec DD 03db851ecr			; 0.09
CONST	ENDS
;	COMDAT __real@3d8f5c29
CONST	SEGMENT
__real@3d8f5c29 DD 03d8f5c29r			; 0.07
CONST	ENDS
;	COMDAT __real@3d75c28f
CONST	SEGMENT
__real@3d75c28f DD 03d75c28fr			; 0.06
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Programmieren\csgoHack\ProjektWolf\ImGui DirectX 9 Kiero Hook 2\imgui\imgui.h
;	COMDAT ??0ImVec4@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0ImVec4@@QAE@MMMM@Z PROC				; ImVec4::ImVec4, COMDAT
; _this$ = ecx

; 200  :     ImVec4(float _x, float _y, float _z, float _w) { x = _x; y = _y; z = _z; w = _w; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __42049807_imgui@h
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00035	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00041	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0004e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR __w$[ebp]
  0005b	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 10 00	 ret	 16			; 00000010H
??0ImVec4@@QAE@MMMM@Z ENDP				; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Programmieren\csgoHack\ProjektWolf\ImGui DirectX 9 Kiero Hook 2\imgui\imgui.h
;	COMDAT ??0ImVec2@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0ImVec2@@QAE@MM@Z PROC				; ImVec2::ImVec2, COMDAT
; _this$ = ecx

; 187  :     ImVec2(float _x, float _y) { x = _x; y = _y; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __42049807_imgui@h
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00035	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00041	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
??0ImVec2@@QAE@MM@Z ENDP				; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Programmieren\csgoHack\ProjektWolf\ImGui DirectX 9 Kiero Hook 2\styles.cpp
;	COMDAT ?loadStyle@@YAXXZ
_TEXT	SEGMENT
$T1 = -1296						; size = 16
$T2 = -1272						; size = 16
$T3 = -1248						; size = 16
$T4 = -1224						; size = 16
$T5 = -1200						; size = 16
$T6 = -1176						; size = 16
$T7 = -1152						; size = 16
$T8 = -1128						; size = 16
$T9 = -1104						; size = 16
$T10 = -1080						; size = 16
$T11 = -1056						; size = 16
$T12 = -1032						; size = 16
$T13 = -1008						; size = 16
$T14 = -984						; size = 16
$T15 = -960						; size = 16
$T16 = -936						; size = 16
$T17 = -912						; size = 16
$T18 = -888						; size = 16
$T19 = -864						; size = 16
$T20 = -840						; size = 16
$T21 = -816						; size = 16
$T22 = -792						; size = 16
$T23 = -768						; size = 16
$T24 = -744						; size = 16
$T25 = -720						; size = 16
$T26 = -696						; size = 16
$T27 = -672						; size = 16
$T28 = -648						; size = 16
$T29 = -624						; size = 16
$T30 = -600						; size = 16
$T31 = -576						; size = 16
$T32 = -552						; size = 16
$T33 = -528						; size = 16
$T34 = -504						; size = 16
$T35 = -480						; size = 16
$T36 = -456						; size = 8
$T37 = -440						; size = 8
$T38 = -424						; size = 8
$T39 = -408						; size = 8
_style$ = -8						; size = 4
?loadStyle@@YAXXZ PROC					; loadStyle, COMDAT

; 4    : void loadStyle() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 05 00
	00		 sub	 esp, 1300		; 00000514H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd ec fa ff
	ff		 lea	 edi, DWORD PTR [ebp-1300]
  00012	b9 45 01 00 00	 mov	 ecx, 325		; 00000145H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A6388185_styles@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 5    : 	ImGuiStyle* style = &ImGui::GetStyle();

  00028	e8 00 00 00 00	 call	 ?GetStyle@ImGui@@YAAAUImGuiStyle@@XZ ; ImGui::GetStyle
  0002d	89 45 f8	 mov	 DWORD PTR _style$[ebp], eax

; 6    : 
; 7    : 	style->WindowPadding = ImVec2(15, 15);

  00030	51		 push	 ecx
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00039	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003e	51		 push	 ecx
  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR $T39[ebp]
  00052	e8 00 00 00 00	 call	 ??0ImVec2@@QAE@MM@Z	; ImVec2::ImVec2
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  0005f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00062	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 8    : 	style->WindowRounding = 5.0f;

  00065	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00068	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00070	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 9    : 	style->FramePadding = ImVec2(5, 5);

  00075	51		 push	 ecx
  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  0007e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00083	51		 push	 ecx
  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  0008c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00091	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR $T38[ebp]
  00097	e8 00 00 00 00	 call	 ??0ImVec2@@QAE@MM@Z	; ImVec2::ImVec2
  0009c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a1	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  000a4	89 48 38	 mov	 DWORD PTR [eax+56], ecx
  000a7	89 50 3c	 mov	 DWORD PTR [eax+60], edx

; 10   : 	style->FrameRounding = 4.0f;

  000aa	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  000ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40800000
  000b5	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0

; 11   : 	style->ItemSpacing = ImVec2(12, 8);

  000ba	51		 push	 ecx
  000bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  000c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c8	51		 push	 ecx
  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR $T37[ebp]
  000dc	e8 00 00 00 00	 call	 ??0ImVec2@@QAE@MM@Z	; ImVec2::ImVec2
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000e6	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  000e9	89 48 48	 mov	 DWORD PTR [eax+72], ecx
  000ec	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 12   : 	style->ItemInnerSpacing = ImVec2(8, 6);

  000ef	51		 push	 ecx
  000f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c00000
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	51		 push	 ecx
  000fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  00106	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010b	8d 8d 38 fe ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  00111	e8 00 00 00 00	 call	 ??0ImVec2@@QAE@MM@Z	; ImVec2::ImVec2
  00116	8b 08		 mov	 ecx, DWORD PTR [eax]
  00118	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0011b	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  0011e	89 48 50	 mov	 DWORD PTR [eax+80], ecx
  00121	89 50 54	 mov	 DWORD PTR [eax+84], edx

; 13   : 	style->IndentSpacing = 25.0f;

  00124	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00127	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c80000
  0012f	f3 0f 11 40 60	 movss	 DWORD PTR [eax+96], xmm0

; 14   : 	style->ScrollbarSize = 15.0f;

  00134	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41700000
  0013f	f3 0f 11 40 68	 movss	 DWORD PTR [eax+104], xmm0

; 15   : 	style->ScrollbarRounding = 9.0f;

  00144	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41100000
  0014f	f3 0f 11 40 6c	 movss	 DWORD PTR [eax+108], xmm0

; 16   : 	style->GrabMinSize = 5.0f;

  00154	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00157	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  0015f	f3 0f 11 40 70	 movss	 DWORD PTR [eax+112], xmm0

; 17   : 	style->GrabRounding = 3.0f;

  00164	8b 45 f8	 mov	 eax, DWORD PTR _style$[ebp]
  00167	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0016f	f3 0f 11 40 74	 movss	 DWORD PTR [eax+116], xmm0

; 18   : 
; 19   : 	style->Colors[ImGuiCol_Text] = ImVec4(0.80f, 0.80f, 0.83f, 1.00f);

  00174	51		 push	 ecx
  00175	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0017d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00182	51		 push	 ecx
  00183	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f547ae1
  0018b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00190	51		 push	 ecx
  00191	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00199	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019e	51		 push	 ecx
  0019f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  001a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ac	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR $T35[ebp]
  001b2	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  001b7	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  001bc	6b d1 00	 imul	 edx, ecx, 0
  001bf	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  001c2	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  001c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cb	89 0a		 mov	 DWORD PTR [edx], ecx
  001cd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d0	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  001d3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d6	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  001d9	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  001dc	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 20   : 	style->Colors[ImGuiCol_TextDisabled] = ImVec4(0.24f, 0.23f, 0.29f, 1.00f);

  001df	51		 push	 ecx
  001e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ed	51		 push	 ecx
  001ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e947ae1
  001f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fb	51		 push	 ecx
  001fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00204	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00209	51		 push	 ecx
  0020a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e75c28f
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  0021d	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00222	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00227	c1 e1 00	 shl	 ecx, 0
  0022a	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  0022d	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  00234	8b 10		 mov	 edx, DWORD PTR [eax]
  00236	89 11		 mov	 DWORD PTR [ecx], edx
  00238	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0023b	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0023e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00241	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00244	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00247	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 21   : 	style->Colors[ImGuiCol_WindowBg] = ImVec4(0.06f, 0.05f, 0.07f, 1.00f);

  0024a	51		 push	 ecx
  0024b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00253	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00258	51		 push	 ecx
  00259	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  00261	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00266	51		 push	 ecx
  00267	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	51		 push	 ecx
  00275	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d75c28f
  0027d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00282	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR $T33[ebp]
  00288	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  0028d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00292	d1 e1		 shl	 ecx, 1
  00294	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  00297	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  0029e	8b 10		 mov	 edx, DWORD PTR [eax]
  002a0	89 11		 mov	 DWORD PTR [ecx], edx
  002a2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002a5	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  002a8	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002ab	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  002ae	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  002b1	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 22   : 	style->Colors[ImGuiCol_PopupBg] = ImVec4(0.07f, 0.07f, 0.09f, 1.00f);

  002b4	51		 push	 ecx
  002b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c2	51		 push	 ecx
  002c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  002cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d0	51		 push	 ecx
  002d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  002d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002de	51		 push	 ecx
  002df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  002e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ec	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T32[ebp]
  002f2	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  002f7	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002fc	c1 e1 02	 shl	 ecx, 2
  002ff	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  00302	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  00309	8b 10		 mov	 edx, DWORD PTR [eax]
  0030b	89 11		 mov	 DWORD PTR [ecx], edx
  0030d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00310	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00313	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00316	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00319	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0031c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 23   : 	style->Colors[ImGuiCol_Border] = ImVec4(0.80f, 0.80f, 0.83f, 0.88f);

  0031f	51		 push	 ecx
  00320	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6147ae
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	51		 push	 ecx
  0032e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f547ae1
  00336	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033b	51		 push	 ecx
  0033c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00344	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00349	51		 push	 ecx
  0034a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00352	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00357	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR $T31[ebp]
  0035d	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00362	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00367	6b d1 05	 imul	 edx, ecx, 5
  0036a	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  0036d	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00374	8b 08		 mov	 ecx, DWORD PTR [eax]
  00376	89 0a		 mov	 DWORD PTR [edx], ecx
  00378	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0037b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0037e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00381	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00384	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00387	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 24   : 	style->Colors[ImGuiCol_BorderShadow] = ImVec4(0.92f, 0.91f, 0.88f, 0.00f);

  0038a	51		 push	 ecx
  0038b	0f 57 c0	 xorps	 xmm0, xmm0
  0038e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00393	51		 push	 ecx
  00394	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6147ae
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  003aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003af	51		 push	 ecx
  003b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  003b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bd	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  003c3	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  003c8	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  003cd	6b d1 06	 imul	 edx, ecx, 6
  003d0	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  003d3	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  003da	8b 08		 mov	 ecx, DWORD PTR [eax]
  003dc	89 0a		 mov	 DWORD PTR [edx], ecx
  003de	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003e1	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  003e4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  003e7	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  003ea	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  003ed	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 25   : 	style->Colors[ImGuiCol_FrameBg] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  003f0	51		 push	 ecx
  003f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fe	51		 push	 ecx
  003ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  00407	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040c	51		 push	 ecx
  0040d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  00415	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0041a	51		 push	 ecx
  0041b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00423	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00428	8d 8d 90 fd ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  0042e	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00433	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00438	6b d1 07	 imul	 edx, ecx, 7
  0043b	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  0043e	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00445	8b 08		 mov	 ecx, DWORD PTR [eax]
  00447	89 0a		 mov	 DWORD PTR [edx], ecx
  00449	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0044c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0044f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00452	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00455	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00458	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 26   : 	style->Colors[ImGuiCol_FrameBgHovered] = ImVec4(0.24f, 0.23f, 0.29f, 1.00f);

  0045b	51		 push	 ecx
  0045c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00464	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00469	51		 push	 ecx
  0046a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e947ae1
  00472	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00477	51		 push	 ecx
  00478	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00480	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00485	51		 push	 ecx
  00486	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e75c28f
  0048e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00493	8d 8d 78 fd ff
	ff		 lea	 ecx, DWORD PTR $T28[ebp]
  00499	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  0049e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  004a3	c1 e1 03	 shl	 ecx, 3
  004a6	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  004a9	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  004b0	8b 10		 mov	 edx, DWORD PTR [eax]
  004b2	89 11		 mov	 DWORD PTR [ecx], edx
  004b4	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  004b7	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  004ba	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  004bd	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  004c0	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  004c3	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 27   : 	style->Colors[ImGuiCol_FrameBgActive] = ImVec4(0.56f, 0.56f, 0.58f, 1.00f);

  004c6	51		 push	 ecx
  004c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d4	51		 push	 ecx
  004d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  004dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e2	51		 push	 ecx
  004e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  004eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f0	51		 push	 ecx
  004f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  004f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fe	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR $T27[ebp]
  00504	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00509	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0050e	6b d1 09	 imul	 edx, ecx, 9
  00511	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00514	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  0051b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051d	89 0a		 mov	 DWORD PTR [edx], ecx
  0051f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00522	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00525	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00528	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0052b	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0052e	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 28   : 	style->Colors[ImGuiCol_TitleBg] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  00531	51		 push	 ecx
  00532	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0053a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053f	51		 push	 ecx
  00540	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  00548	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054d	51		 push	 ecx
  0054e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  00556	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0055b	51		 push	 ecx
  0055c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00564	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00569	8d 8d 48 fd ff
	ff		 lea	 ecx, DWORD PTR $T26[ebp]
  0056f	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00574	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00579	6b d1 0a	 imul	 edx, ecx, 10
  0057c	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  0057f	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00586	8b 08		 mov	 ecx, DWORD PTR [eax]
  00588	89 0a		 mov	 DWORD PTR [edx], ecx
  0058a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0058d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00590	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00593	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00596	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00599	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 29   : 	style->Colors[ImGuiCol_TitleBgCollapsed] = ImVec4(1.00f, 0.98f, 0.95f, 0.75f);

  0059c	51		 push	 ecx
  0059d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  005a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005aa	51		 push	 ecx
  005ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  005b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b8	51		 push	 ecx
  005b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae148
  005c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c6	51		 push	 ecx
  005c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d4	8d 8d 30 fd ff
	ff		 lea	 ecx, DWORD PTR $T25[ebp]
  005da	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  005df	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  005e4	6b d1 0c	 imul	 edx, ecx, 12
  005e7	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  005ea	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  005f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005f3	89 0a		 mov	 DWORD PTR [edx], ecx
  005f5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005f8	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  005fb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  005fe	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00601	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00604	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 30   : 	style->Colors[ImGuiCol_TitleBgActive] = ImVec4(0.07f, 0.07f, 0.09f, 1.00f);

  00607	51		 push	 ecx
  00608	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00610	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00615	51		 push	 ecx
  00616	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  0061e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00623	51		 push	 ecx
  00624	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  0062c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00631	51		 push	 ecx
  00632	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  0063a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063f	8d 8d 18 fd ff
	ff		 lea	 ecx, DWORD PTR $T24[ebp]
  00645	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  0064a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0064f	6b d1 0b	 imul	 edx, ecx, 11
  00652	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00655	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  0065c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0065e	89 0a		 mov	 DWORD PTR [edx], ecx
  00660	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00663	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00666	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00669	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0066c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0066f	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 31   : 	style->Colors[ImGuiCol_MenuBarBg] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  00672	51		 push	 ecx
  00673	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0067b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00680	51		 push	 ecx
  00681	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  00689	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068e	51		 push	 ecx
  0068f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  00697	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069c	51		 push	 ecx
  0069d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  006a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006aa	8d 8d 00 fd ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  006b0	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  006b5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  006ba	6b d1 0d	 imul	 edx, ecx, 13
  006bd	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  006c0	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  006c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  006c9	89 0a		 mov	 DWORD PTR [edx], ecx
  006cb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  006ce	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  006d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  006d4	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  006d7	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  006da	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 32   : 	style->Colors[ImGuiCol_ScrollbarBg] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  006dd	51		 push	 ecx
  006de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  006e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006eb	51		 push	 ecx
  006ec	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  006f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f9	51		 push	 ecx
  006fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  00702	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00707	51		 push	 ecx
  00708	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00710	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00715	8d 8d e8 fc ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  0071b	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00720	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00725	6b d1 0e	 imul	 edx, ecx, 14
  00728	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  0072b	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00732	8b 08		 mov	 ecx, DWORD PTR [eax]
  00734	89 0a		 mov	 DWORD PTR [edx], ecx
  00736	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00739	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0073c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0073f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00742	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00745	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 33   : 	style->Colors[ImGuiCol_ScrollbarGrab] = ImVec4(0.80f, 0.80f, 0.83f, 0.31f);

  00748	51		 push	 ecx
  00749	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e9eb852
  00751	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00756	51		 push	 ecx
  00757	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f547ae1
  0075f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00764	51		 push	 ecx
  00765	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0076d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00772	51		 push	 ecx
  00773	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0077b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00780	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00786	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  0078b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00790	6b d1 0f	 imul	 edx, ecx, 15
  00793	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00796	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  0079d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0079f	89 0a		 mov	 DWORD PTR [edx], ecx
  007a1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  007a4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  007a7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  007aa	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  007ad	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  007b0	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 34   : 	style->Colors[ImGuiCol_ScrollbarGrabHovered] = ImVec4(0.56f, 0.56f, 0.58f, 1.00f);

  007b3	51		 push	 ecx
  007b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007c1	51		 push	 ecx
  007c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  007ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cf	51		 push	 ecx
  007d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  007d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007dd	51		 push	 ecx
  007de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  007e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007eb	8d 8d b8 fc ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  007f1	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  007f6	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  007fb	c1 e1 04	 shl	 ecx, 4
  007fe	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  00801	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  00808	8b 10		 mov	 edx, DWORD PTR [eax]
  0080a	89 11		 mov	 DWORD PTR [ecx], edx
  0080c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0080f	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00812	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00815	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00818	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0081b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 35   : 	style->Colors[ImGuiCol_ScrollbarGrabActive] = ImVec4(0.06f, 0.05f, 0.07f, 1.00f);

  0081e	51		 push	 ecx
  0081f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00827	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082c	51		 push	 ecx
  0082d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  00835	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0083a	51		 push	 ecx
  0083b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00843	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00848	51		 push	 ecx
  00849	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d75c28f
  00851	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00856	8d 8d a0 fc ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  0085c	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00861	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00866	6b d1 11	 imul	 edx, ecx, 17
  00869	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  0086c	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00873	8b 08		 mov	 ecx, DWORD PTR [eax]
  00875	89 0a		 mov	 DWORD PTR [edx], ecx
  00877	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0087a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0087d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00880	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00883	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00886	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 36   : 	style->Colors[ImGuiCol_CheckMark] = ImVec4(0.80f, 0.80f, 0.83f, 0.31f);

  00889	51		 push	 ecx
  0088a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e9eb852
  00892	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00897	51		 push	 ecx
  00898	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f547ae1
  008a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a5	51		 push	 ecx
  008a6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  008ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b3	51		 push	 ecx
  008b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  008bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008c1	8d 8d 88 fc ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  008c7	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  008cc	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  008d1	6b d1 12	 imul	 edx, ecx, 18
  008d4	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  008d7	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  008de	8b 08		 mov	 ecx, DWORD PTR [eax]
  008e0	89 0a		 mov	 DWORD PTR [edx], ecx
  008e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  008e5	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  008e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  008eb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  008ee	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  008f1	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 37   : 	style->Colors[ImGuiCol_SliderGrab] = ImVec4(0.80f, 0.80f, 0.83f, 0.31f);

  008f4	51		 push	 ecx
  008f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e9eb852
  008fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00902	51		 push	 ecx
  00903	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f547ae1
  0090b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00910	51		 push	 ecx
  00911	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00919	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0091e	51		 push	 ecx
  0091f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00927	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0092c	8d 8d 70 fc ff
	ff		 lea	 ecx, DWORD PTR $T17[ebp]
  00932	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00937	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0093c	6b d1 13	 imul	 edx, ecx, 19
  0093f	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00942	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00949	8b 08		 mov	 ecx, DWORD PTR [eax]
  0094b	89 0a		 mov	 DWORD PTR [edx], ecx
  0094d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00950	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00953	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00956	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00959	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0095c	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 38   : 	style->Colors[ImGuiCol_SliderGrabActive] = ImVec4(0.06f, 0.05f, 0.07f, 1.00f);

  0095f	51		 push	 ecx
  00960	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00968	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096d	51		 push	 ecx
  0096e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  00976	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0097b	51		 push	 ecx
  0097c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00984	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00989	51		 push	 ecx
  0098a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d75c28f
  00992	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00997	8d 8d 58 fc ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  0099d	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  009a2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  009a7	6b d1 14	 imul	 edx, ecx, 20
  009aa	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  009ad	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  009b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  009b6	89 0a		 mov	 DWORD PTR [edx], ecx
  009b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009bb	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  009be	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  009c1	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  009c4	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  009c7	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 39   : 	style->Colors[ImGuiCol_Button] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  009ca	51		 push	 ecx
  009cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d8	51		 push	 ecx
  009d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  009e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009e6	51		 push	 ecx
  009e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  009ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009f4	51		 push	 ecx
  009f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  009fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a02	8d 8d 40 fc ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  00a08	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00a0d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a12	6b d1 15	 imul	 edx, ecx, 21
  00a15	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00a18	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00a1f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a21	89 0a		 mov	 DWORD PTR [edx], ecx
  00a23	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a26	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00a29	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00a2c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00a2f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00a32	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 40   : 	style->Colors[ImGuiCol_ButtonHovered] = ImVec4(0.24f, 0.23f, 0.29f, 1.00f);

  00a35	51		 push	 ecx
  00a36	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a3e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a43	51		 push	 ecx
  00a44	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e947ae1
  00a4c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a51	51		 push	 ecx
  00a52	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6b851f
  00a5a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a5f	51		 push	 ecx
  00a60	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e75c28f
  00a68	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a6d	8d 8d 28 fc ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  00a73	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00a78	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a7d	6b d1 16	 imul	 edx, ecx, 22
  00a80	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00a83	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00a8a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a8c	89 0a		 mov	 DWORD PTR [edx], ecx
  00a8e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a91	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00a94	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00a97	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00a9a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00a9d	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 41   : 	style->Colors[ImGuiCol_ButtonActive] = ImVec4(0.56f, 0.56f, 0.58f, 1.00f);

  00aa0	51		 push	 ecx
  00aa1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00aa9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aae	51		 push	 ecx
  00aaf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  00ab7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00abc	51		 push	 ecx
  00abd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00ac5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aca	51		 push	 ecx
  00acb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00ad3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ad8	8d 8d 10 fc ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  00ade	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00ae3	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ae8	6b d1 17	 imul	 edx, ecx, 23
  00aeb	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00aee	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00af5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00af7	89 0a		 mov	 DWORD PTR [edx], ecx
  00af9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00afc	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00aff	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00b02	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00b05	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00b08	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 42   : 	style->Colors[ImGuiCol_Header] = ImVec4(0.10f, 0.09f, 0.12f, 1.00f);

  00b0b	51		 push	 ecx
  00b0c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b14	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b19	51		 push	 ecx
  00b1a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3df5c28f
  00b22	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b27	51		 push	 ecx
  00b28	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3db851ec
  00b30	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b35	51		 push	 ecx
  00b36	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00b3e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b43	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00b49	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00b4e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00b53	6b d1 18	 imul	 edx, ecx, 24
  00b56	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00b59	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00b60	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b62	89 0a		 mov	 DWORD PTR [edx], ecx
  00b64	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b67	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00b6a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00b6d	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00b70	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00b73	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 43   : 	style->Colors[ImGuiCol_HeaderHovered] = ImVec4(0.56f, 0.56f, 0.58f, 1.00f);

  00b76	51		 push	 ecx
  00b77	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b7f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b84	51		 push	 ecx
  00b85	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  00b8d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b92	51		 push	 ecx
  00b93	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00b9b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ba0	51		 push	 ecx
  00ba1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00ba9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bae	8d 8d e0 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00bb4	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00bb9	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00bbe	6b d1 19	 imul	 edx, ecx, 25
  00bc1	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00bc4	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00bcb	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bcd	89 0a		 mov	 DWORD PTR [edx], ecx
  00bcf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bd2	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00bd5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00bd8	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00bdb	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00bde	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 44   : 	style->Colors[ImGuiCol_HeaderActive] = ImVec4(0.06f, 0.05f, 0.07f, 1.00f);

  00be1	51		 push	 ecx
  00be2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00bea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bef	51		 push	 ecx
  00bf0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  00bf8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bfd	51		 push	 ecx
  00bfe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00c06	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c0b	51		 push	 ecx
  00c0c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d75c28f
  00c14	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c19	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00c1f	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00c24	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00c29	6b d1 1a	 imul	 edx, ecx, 26
  00c2c	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00c2f	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00c36	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c38	89 0a		 mov	 DWORD PTR [edx], ecx
  00c3a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c3d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00c40	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c43	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00c46	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00c49	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 45   : 	style->Colors[ImGuiCol_ResizeGrip] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);

  00c4c	51		 push	 ecx
  00c4d	0f 57 c0	 xorps	 xmm0, xmm0
  00c50	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c55	51		 push	 ecx
  00c56	0f 57 c0	 xorps	 xmm0, xmm0
  00c59	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c5e	51		 push	 ecx
  00c5f	0f 57 c0	 xorps	 xmm0, xmm0
  00c62	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c67	51		 push	 ecx
  00c68	0f 57 c0	 xorps	 xmm0, xmm0
  00c6b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c70	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00c76	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00c7b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00c80	6b d1 1e	 imul	 edx, ecx, 30
  00c83	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00c86	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00c8d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c8f	89 0a		 mov	 DWORD PTR [edx], ecx
  00c91	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c94	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00c97	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00c9a	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00c9d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00ca0	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 46   : 	style->Colors[ImGuiCol_ResizeGripHovered] = ImVec4(0.56f, 0.56f, 0.58f, 1.00f);

  00ca3	51		 push	 ecx
  00ca4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00cac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cb1	51		 push	 ecx
  00cb2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  00cba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cbf	51		 push	 ecx
  00cc0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00cc8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ccd	51		 push	 ecx
  00cce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f5c29
  00cd6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cdb	8d 8d 98 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00ce1	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00ce6	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ceb	6b d1 1f	 imul	 edx, ecx, 31
  00cee	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00cf1	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00cf8	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cfa	89 0a		 mov	 DWORD PTR [edx], ecx
  00cfc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00cff	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00d02	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00d05	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00d08	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00d0b	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 47   : 	style->Colors[ImGuiCol_ResizeGripActive] = ImVec4(0.06f, 0.05f, 0.07f, 1.00f);

  00d0e	51		 push	 ecx
  00d0f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00d17	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d1c	51		 push	 ecx
  00d1d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8f5c29
  00d25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d2a	51		 push	 ecx
  00d2b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00d33	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d38	51		 push	 ecx
  00d39	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d75c28f
  00d41	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d46	8d 8d 80 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00d4c	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00d51	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d56	c1 e1 05	 shl	 ecx, 5
  00d59	8b 55 f8	 mov	 edx, DWORD PTR _style$[ebp]
  00d5c	8d 8c 0a b0 00
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+176]
  00d63	8b 10		 mov	 edx, DWORD PTR [eax]
  00d65	89 11		 mov	 DWORD PTR [ecx], edx
  00d67	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00d6a	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00d6d	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00d70	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00d73	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00d76	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 48   : 	style->Colors[ImGuiCol_PlotLines] = ImVec4(0.40f, 0.39f, 0.38f, 0.63f);

  00d79	51		 push	 ecx
  00d7a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f2147ae
  00d82	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d87	51		 push	 ecx
  00d88	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ec28f5c
  00d90	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d95	51		 push	 ecx
  00d96	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ec7ae14
  00d9e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00da3	51		 push	 ecx
  00da4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  00dac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00db1	8d 8d 68 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00db7	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00dbc	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00dc1	6b d1 26	 imul	 edx, ecx, 38
  00dc4	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00dc7	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00dce	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dd0	89 0a		 mov	 DWORD PTR [edx], ecx
  00dd2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00dd5	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00dd8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00ddb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00dde	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00de1	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 49   : 	style->Colors[ImGuiCol_PlotLinesHovered] = ImVec4(0.25f, 1.00f, 0.00f, 1.00f);

  00de4	51		 push	 ecx
  00de5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ded	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00df2	51		 push	 ecx
  00df3	0f 57 c0	 xorps	 xmm0, xmm0
  00df6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dfb	51		 push	 ecx
  00dfc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00e04	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e09	51		 push	 ecx
  00e0a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  00e12	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e17	8d 8d 50 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00e1d	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00e22	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e27	6b d1 27	 imul	 edx, ecx, 39
  00e2a	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00e2d	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00e34	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e36	89 0a		 mov	 DWORD PTR [edx], ecx
  00e38	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e3b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00e3e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00e41	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00e44	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00e47	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 50   : 	style->Colors[ImGuiCol_PlotHistogram] = ImVec4(0.40f, 0.39f, 0.38f, 0.63f);

  00e4a	51		 push	 ecx
  00e4b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f2147ae
  00e53	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e58	51		 push	 ecx
  00e59	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ec28f5c
  00e61	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e66	51		 push	 ecx
  00e67	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ec7ae14
  00e6f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e74	51		 push	 ecx
  00e75	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  00e7d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e82	8d 8d 38 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00e88	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00e8d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00e92	6b d1 28	 imul	 edx, ecx, 40
  00e95	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00e98	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00e9f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ea1	89 0a		 mov	 DWORD PTR [edx], ecx
  00ea3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ea6	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00ea9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00eac	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00eaf	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00eb2	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 51   : 	style->Colors[ImGuiCol_PlotHistogramHovered] = ImVec4(0.25f, 1.00f, 0.00f, 1.00f);

  00eb5	51		 push	 ecx
  00eb6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ebe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ec3	51		 push	 ecx
  00ec4	0f 57 c0	 xorps	 xmm0, xmm0
  00ec7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ecc	51		 push	 ecx
  00ecd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ed5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00eda	51		 push	 ecx
  00edb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  00ee3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ee8	8d 8d 20 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00eee	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00ef3	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ef8	6b d1 29	 imul	 edx, ecx, 41
  00efb	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00efe	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00f05	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f07	89 0a		 mov	 DWORD PTR [edx], ecx
  00f09	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00f0c	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00f0f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00f12	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00f15	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00f18	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 52   : 	style->Colors[ImGuiCol_TextSelectedBg] = ImVec4(0.25f, 1.00f, 0.00f, 0.43f);

  00f1b	51		 push	 ecx
  00f1c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3edc28f6
  00f24	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f29	51		 push	 ecx
  00f2a	0f 57 c0	 xorps	 xmm0, xmm0
  00f2d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f32	51		 push	 ecx
  00f33	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00f3b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f40	51		 push	 ecx
  00f41	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  00f49	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f4e	8d 8d 08 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00f54	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00f59	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00f5e	6b d1 2a	 imul	 edx, ecx, 42
  00f61	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00f64	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00f6b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f6d	89 0a		 mov	 DWORD PTR [edx], ecx
  00f6f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00f72	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00f75	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00f78	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00f7b	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00f7e	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 53   : 	style->Colors[ImGuiCol_ModalWindowDarkening] = ImVec4(1.00f, 0.98f, 0.95f, 0.73f);

  00f81	51		 push	 ecx
  00f82	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f3ae148
  00f8a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f8f	51		 push	 ecx
  00f90	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f733333
  00f98	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f9d	51		 push	 ecx
  00f9e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7ae148
  00fa6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fab	51		 push	 ecx
  00fac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00fb4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fb9	8d 8d f0 fa ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00fbf	e8 00 00 00 00	 call	 ??0ImVec4@@QAE@MMMM@Z	; ImVec4::ImVec4
  00fc4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00fc9	6b d1 2f	 imul	 edx, ecx, 47
  00fcc	8b 4d f8	 mov	 ecx, DWORD PTR _style$[ebp]
  00fcf	8d 94 11 b0 00
	00 00		 lea	 edx, DWORD PTR [ecx+edx+176]
  00fd6	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fd8	89 0a		 mov	 DWORD PTR [edx], ecx
  00fda	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00fdd	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00fe0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00fe3	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00fe6	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00fe9	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 54   : }

  00fec	5f		 pop	 edi
  00fed	5e		 pop	 esi
  00fee	5b		 pop	 ebx
  00fef	81 c4 14 05 00
	00		 add	 esp, 1300		; 00000514H
  00ff5	3b ec		 cmp	 ebp, esp
  00ff7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ffc	8b e5		 mov	 esp, ebp
  00ffe	5d		 pop	 ebp
  00fff	c3		 ret	 0
?loadStyle@@YAXXZ ENDP					; loadStyle
_TEXT	ENDS
END
